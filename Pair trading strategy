# -*- coding: utf-8 -*-
"""
Created on Tue Jul 26 15:05:41 2016

@author: Xiao Ji
"""

# -*- coding: utf-8 -*-
"""
Created on Fri Jul 08 16:54:59 2016

@author: gft-intern10
"""
import pandas as pd 
import numpy as np
from math import log 
from statsmodels.tsa.stattools import coint   ##This is a simple cointegration test. Uses unit-root test on residuals to
   ## test for cointegrated relationship
import matplotlib.pyplot as plt
import matplotlib.pylab as pl



for i in range(7):
     filename='MKT_Future1min'+str(i+1)+'.csv'     
     locals()['a'+str(i)]=pd.read_csv(filename)  

for i in range(7):
     locals()['a'+str(i)]=eval('a'+str(i)).ix[:,['FutureID','TradeDateTime','ClosPrc']]
     

    
for i in range(7):
     temp='prc'+str(i)
     locals()['a'+str(i)]=eval('a'+str(i)).rename(columns={"ClosPrc":temp})
     
     
a=a0.copy()

for i in range(6):    
     a=pd.merge(a,eval('a'+str(i+1)),on='TradeDateTime',how='inner')
     
b=[]     

for i in range(7):
    for j in range(7):
      fir='prc'+str(i)
      sec='prc'+str(j)     
      b.append(coint(a.eval(fir),a.eval(sec)))
      
      
xz=[]

for i in range(7):
    for j in range(7):
         num=i*7+j
         if b[num][0]<b[num][2][1]:
             xz.append(1)
         else:
             xz.append(0)

new=a[['prc0','prc1','prc2','prc3','prc4','prc5','prc6']]
corr=new.corr()


p1=np.log(np.array(new.prc0))
p2=np.log(np.array(new.prc1))
p=p1-p2
meanprc=(p1[0:1000]-p2[0:1000]).mean()
pv=pd.Series(p[5000:6001])
q=[]
quan_list=[20,50,60,80]
for num in quan_list:
    q.append(pv.quantile(num/100.0))
    
pl.hist(p)




buy1=[0]*len(p)
sell1=[0]*len(p)
buy2=[0]*len(p)
sell2=[0]*len(p)


output=pd.DataFrame()
output=a[['TradeDateTime','prc0','prc1','prc2','prc3','prc4','prc5','prc6']]
output['spread']=p
output['buy1']=np.where(-output['spread']>q[2],1,0)
output['sell2']=output.buy1.copy()
output['buy2']=np.where(output['spread']>q[2],1,0)
output['sell1']=output.buy2.copy()

output['buy1'][output['spread']<q[0]]=-1
output['buy2'][output['spread']<q[0]]=-1
output['sell1'][output['spread']<q[0]]=-1
output['sell2'][output['spread']<q[0]]=-1

      

        
output.to_csv('output.csv')       



